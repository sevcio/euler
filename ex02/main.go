/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
package main

import "fmt"

func main() {
	sum := 0
	for _, val := range fibbonacciBySlice()[:] {
		if val%2 == 0 {
			sum += val
		}
	}
	fmt.Printf("Result is %d\n", sum)
}

func fibbonacciBySlice() []int {
	fibbonaci := []int{0, 1, 1, 2}
	for i := 3; ; i++ {
		next := fibbonaci[i] + fibbonaci[i-1]
		if next < 4000000 {
			fibbonaci = append(fibbonaci, next)
		} else {
			break
		}
	}

	return fibbonaci
}
